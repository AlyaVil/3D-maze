class PlayerObj {
    constructor() {
        this.pos = createVector(0, 0, 3920);
        this.sight = createVector(0, 0, 0);
        this.dir = PI;
        this.upVector = createVector(0, 1, 0);
        this.dist = createVector(0, 0, 3920);
        this.distSight = createVector(0, 0, 0);
        this.distUp = createVector(0, 1, 0);
        this.prePos = createVector(0, 0, 3920);
        this.preSight = createVector(0, 0, 0);
        this.preUpVector = createVector(0, 1, 0);
        this.easeStartTime = Date.now();
        this.easeMoveTime = 0;
        this.easeMoveLimit = 0;
        this.isEaseMove = false;
        this.easeInOutQuad = function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t };
    }
    cameraMode(isOrtho) {
        if (isOrtho) {
            camera(0, 0, 4000, 0, 0, 0, 0, 1, 0);
            ortho(-2200, 2200, -2200, 2200, 1, 6500);
        } else {
            camera(this.pos.x, this.pos.y, this.pos.z, this.sight.x, this.sight.y, this.sight.z, this.upVector.x, this.upVector.y, this.upVector.z);
            perspective(PI / 3.0, width / height, 1, 6000);
        }
    }
    easeMove(stage, aside, t) {
        if (!this.isEaseMove) {
            this.isEaseMove = true;
            this.easeStartTime = Date.now();
            this.easeMoveLimit = t;
            if (stage == 1) {
                this.dist.x = aside * 10;
                this.dist.y = aside * 9;
                this.dist.z = -20;
                this.dir = PI;
                this.distSight.x = cos(this.dir) * 2000 + this.dist.x;
                this.distSight.y = sin(this.dir) * 2000 + this.dist.y;
                this.distSight.z = this.dist.z;
                this.distUp.x = 0;
                this.distUp.y = 0;
                this.distUp.z = -1;
            } else if (stage == 3) {
                this.dist.x = this.pos.x;
                this.dist.y = this.pos.y;
                this.dist.z = this.pos.z;
                this.dir = -HALF_PI;
                this.distSight.x = cos(this.dir) * 2000 + this.dist.x;
                this.distSight.y = sin(this.dir) * 2000 + this.dist.y;
                this.distSight.z = this.dist.z;
                this.distUp.x = this.upVector.x;
                this.distUp.y = this.upVector.y;
                this.distUp.z = this.upVector.z;
